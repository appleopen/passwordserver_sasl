SASLAUTHD(8)             UNIX System Manager's Manual             SASLAUTHD(8)

NNNNAAAAMMMMEEEE
     ssssaaaassssllllaaaauuuutttthhhhdddd - sasl authentication server

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
     ssssaaaassssllllaaaauuuutttthhhhdddd ----aaaa _a_u_t_h_m_e_c_h [----TTTTvvvvddddcccchhhhllllrrrr] [----OOOO _o_p_t_i_o_n] [----mmmm _m_u_x__p_a_t_h] [----nnnn _t_h_r_e_a_d_s]
     [----ssss _s_i_z_e] [----tttt _t_i_m_e_o_u_t]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
     ssssaaaassssllllaaaauuuutttthhhhdddd is a daemon process that handles plaintext authentication re-
     quests on behalf of the SASL library.

     The server fulfills two roles: it isolates all code requiring superuser
     privileges into a single process, and it can be used to provide _p_r_o_x_y au-
     thentication services to clients that do not understand SASL based au-
     thentication.

     ssssaaaassssllllaaaauuuutttthhhhdddd should be started from the system boot scripts when going to
     multi-user mode. When running against a protected authentication database
     (e.g. the shadow mechanism), it must be run as the superuser.

  OOOOppppttttiiiioooonnnnssss
     Options named by lower-case letters configure the server itself.
     Upper-case options control the behavior of specific authentication
     mechanisms; their applicability to a particular authentication mechanism
     is described in the _A_U_T_H_E_N_T_I_C_A_T_I_O_N _M_E_C_H_A_N_I_S_M_S section.

     ----aaaa _a_u_t_h_m_e_c_h
             Use _a_u_t_h_m_e_c_h as the authentication mechanism. (See the
             _A_U_T_H_E_N_T_I_C_A_T_I_O_N _M_E_C_H_A_N_I_S_M_S section below.) This parameter is man-
             datory.

     ----OOOO _o_p_t_i_o_n
             A mechanism specific option (e.g. rimap hostname or config file
             path)

     ----HHHH _h_o_s_t_n_a_m_e
             The remote host to be contacted by the rimap authentication
             mechanism. (Depricated, use -O instead)

     ----mmmm _p_a_t_h
             Use _p_a_t_h as the pathname to the named socket to listen on for
             connection requests. This must be an absolute pathname, and MUST
             NOT include the trailing "/mux".  Note that the default for this
             value is "/var/state/saslauthd" (or what was specified at compile
             time) and that this directory must exist for saslauthd to func-
             tion.

     ----nnnn _t_h_r_e_a_d_s
             Use _t_h_r_e_a_d_s processes for responding to authentication queries.
             (default: 5)  A value of zero will indicate that saslauthd should
             fork an individual process for each connection.  This can solve
             leaks that occur in some deployments..

     ----ssss _s_i_z_e
             Use _s_i_z_e as the table size of the hash table (in kilobytes)

     ----tttt _t_i_m_e_o_u_t
             Use _t_i_m_e_o_u_t as the expiration time of the authentication cache
             (in seconds)

     ----TTTT      Honour time-of-day login restrictions.


     ----hhhh      Show usage information

     ----cccc      Enable cacheing of authentication credentials

     ----llll      Disable the use of a lock file for controlling access to ac-
             cept().

     ----rrrr      Combine the realm with the login (with an '@' sign in between).
             e.g.  login: "foo" realm: "bar" will get passed as login:
             "foo@bar".  Note that the realm will still be passed, which may
             lead to unexpected behavior.

     ----vvvv      Print the version number and available authentication mechanisms
             on standard error, then exit.

     ----dddd      Debugging mode.

  LLLLooooggggggggiiiinnnngggg
     ssssaaaassssllllaaaauuuutttthhhhdddd logs it's activities via ssssyyyyssssllllooooggggdddd using the LOG_AUTH facility.

AAAAUUUUTTTTHHHHEEEENNNNTTTTIIIICCCCAAAATTTTIIIIOOOONNNN MMMMEEEECCCCHHHHAAAANNNNIIIISSSSMMMMSSSS
     ssssaaaassssllllaaaauuuutttthhhhdddd supports one or more "authentication mechanisms", dependent
     upon the facilities provided by the underlying operating system.  The
     mechanism is selected by the ----aaaahhhhoooo flag from the following list of
     choices:

     dce        (_A_I_X)

                Authenticate using the DCE authentication environment.

     getpwent   (_A_l_l _p_l_a_t_f_o_r_m_s)

                Authenticate using the ggggeeeettttppppwwwweeeennnntttt() library function. Typically
                this authenticates against the local password file. See your
                systems getpwent(3) man page for details.

     kerberos4  (_A_l_l _p_l_a_t_f_o_r_m_s)

                Authenticate against the local Kerberos 4 realm. (See the
                _N_O_T_E_S section for caveats about this driver.)

     kerberos5  (_A_l_l _p_l_a_t_f_o_r_m_s)

                Authenticate against the local Kerberos 5 realm.

     pam        (_L_i_n_u_x, _S_o_l_a_r_i_s)

                Authenticate using Pluggable Authentication Modules (PAM).

     rimap      (_A_l_l _p_l_a_t_f_o_r_m_s)

                Forward authentication requests to a remote IMAP server. This
                driver connects to a remote IMAP server, specified using the
                -O flag, and attempts to login (via an IMAP `LOGIN' command)
                using the credentials supplied to the local server. If the re-
                mote authentication succeeds the local connection is also con-
                sidered to be authenticated. The remote connection is closed
                as soon as the tagged response from the `LOGIN' command is re-
                ceived from the remote server.

                The _o_p_t_i_o_n parameter to the ----OOOO flag describes the remote
                server to forward authentication requests to.  _h_o_s_t_n_a_m_e can be
                a hostname (imap.example.com) or a dotted-quad IP address
                (192.168.0.1). The latter is useful if the remote server is
                multi-homed and has network interfaces that are unreachable
                from the local IMAP server. The remote host is contacted on
                the `imap' service port. A non-default port can be specified
                by appending a slash and the port name or number to the
                _h_o_s_t_n_a_m_e argument.

                The ----OOOO flag and argument are mandatory when using the rimap
                mechanism.

     shadow     (_A_I_X, _I_r_i_x, _L_i_n_u_x, _S_o_l_a_r_i_s)

                Authenticate against the local "shadow password file". The ex-
                act mechanism is system dependent.  ssssaaaassssllllaaaauuuutttthhhhdddd currently under-
                stands the ggggeeeettttssssppppnnnnaaaammmm() and ggggeeeettttuuuusssseeeerrrrppppwwww() library routines. Some
                systems honour the ----TTTT flag.

     sasldb     (_A_l_l _p_l_a_t_f_o_r_m_s)

                Authenticate against the SASL authentication database.  Note
                that this is probabally not what you want to be using, and is
                even disabled at compile-time by default.  If you want to use
                sasldb with the SASL library, you probably want to use the
                pwcheck_method of "auxprop" along with the sasldb auxprop plu-
                gin instead.

     ldap       (_A_l_l _p_l_a_t_f_o_r_m_s _t_h_a_t _s_u_p_p_o_r_t _O_p_e_n_L_D_A_P _2._0 _o_r _h_i_g_h_e_r)

                Authenticate against an ldap server.  The ldap configuration
                parameters are read from /usr/local/etc/saslauthd.conf.  The
                location of this file can be changed with the -O parameter.
                See the LDAP_SASLAUTHD file included with the distribution for
                the list of available parameters.

     sia        (_D_i_g_i_t_a_l _U_N_I_X)

                Authenticate using the Digital UNIX Security Integration Ar-
                chitecture (a.k.a.  "enhanced security").

NNNNOOOOTTTTEEEESSSS
     The kerberos4 authentication driver consumes considerable resources. To
     perform an authentication it must obtain a ticket granting ticket from
     the TGT server oooonnnn eeeevvvveeeerrrryyyy aaaauuuutttthhhheeeennnnttttiiiiccccaaaattttiiiioooonnnn rrrreeeeqqqquuuueeeesssstttt.... The Kerberos library rou-
     tines that obtain the TGT also create a local ticket file, on the reason-
     able assumption that you will want to save the TGT for use by other Ker-
     beros applications. These ticket files are unusable by ssssaaaassssllllaaaauuuutttthhhhdddd, however
     there is no way not to create them. The overhead of creating and removing
     these ticket files can cause serious performance degradation on busy
     servers. (Kerberos was never intended to be used in this manner, anyway.)

FFFFIIIILLLLEEEESSSS
     /var/run/saslauthd/mux  The default communications socket.

     /usr/local/etc/saslauthd.conf
                             The default configuration file for ldap support.

SSSSEEEEEEEE AAAALLLLSSSSOOOO
     passwd(1),  getpwent(3),  getspnam(3),  getuserpw(3),  sasl_checkpass(3)
     sia_authenticate_user(3),

 CMU-SASL                         10 24 2002                                 3
